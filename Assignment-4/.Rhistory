df
print(nycflights13::flights, n_extra = 2)
print(nycflights13::flights, n_extra = 5)
print(mtcars.tib, n_extra = 5)
print(nycflights13::mtcars.tib, n_extra = 5)
print(mtcars::mtcars.tib, n_extra = 5)
print(datasets::mtcars.tib, n_extra = 5)
print(mtcars.tib, n_extra = 5)
print(ggplot2::diamonds,n_extra = 5)
print(nycflights13::flights, n_extra = 2)
print(nycflights13::flights)
print(nycflights13::flights,n_extra=3)
tbl <- tibble( age = c(14, 18, 22, 12, 16, 19, 21, 24), chol = c(172, 180, 185, 170, 175, 188, 190, 192), sex = c("male", "male", "female", "female", "female", "male", "male", "male" )
tbl
tbl <- tibble( age = c(14, 18, 22, 12, 16, 19, 21, 24), chol = c(172, 180, 185, 170, 175, 188, 190, 192), sex = c("male", "male", "female", "female", "female", "male", "male", "male" )
tbl
tbl <- tibble( age = c(14, 18, 22, 12, 16, 19, 21, 24),
chol = c(172, 180, 185, 170, 175, 188,
190, 192), sex = c("male", "male",
"female", "female", "female", "male", "male", "male" ))
tbl <- tibble( age = c(14, 18, 22, 12, 16, 19, 21, 24),
chol = c(172, 180, 185, 170, 175, 188,
190, 192), sex = c("male", "male",
"female", "female", "female", "male", "male", "male" ))
tbl <- tibble( age = c(14, 18, 22, 12, 16, 19, 21, 24),
chol = c(172, 180, 185, 170, 175, 188,190, 192),
sex = c("male", "male","female",
"female", "female", "male", "male", "male" ))
library(tibble)
tbl <- tibble( age = c(14, 18, 22, 12, 16, 19, 21, 24),
chol = c(172, 180, 185, 170, 175, 188,190, 192),
sex = c("male", "male","female",
"female", "female", "male", "male", "male" ))
tbl
tbl[[sex]]
tbl[['sex']]
tbl$sex
ggplot(tbl, aes(age, chol)) +
geom_point()
library(tidyverse)
ggplot(tbl, aes(age, chol)) +
geom_point()
ggplot(tbl, aes(age, chol)) + geom_point()
ggplot(tbl, aes(age, chol)) + geom_point()
mutate(tbl,chol2= chol^2)
transmute(tbl,one=age,two=chol,three=chol2)
transmute(tbl,one="age",two="chol",three="chol2")
select(dp_flights,dep_time,dep_hour,dep_min)
library(tidyverse)
library("nycflights13")
library("dplyr")
flights
filter(flights, arr_delay >= 120)
select(flights,dest)
filter(flights, dest == "IAH" | dest == "HOU")
filter(flights, arr_delay > 120, dep_delay <= 0)
filter(flights, dep_delay >= 60, dep_delay - arr_delay > 30)
filter(flights, between(arr_delay, 120, Inf) )
filter(flights, between(arr_delay, 120, Inf)& between(dep_delay,-Inf,0) )
filter(flights, between(dep_delay, 60, Inf)& between(dep_delay- arr_delay,31,Inf) )
arrange(flights, air_time)
arrange(flights, desc(distance / air_time))
dp_flights<-mutate(flights,dep_hour=dep_time %/% 100, dep_min = dep_time %% 100)
select(dp_flights,dep_time,dep_hour,dep_min)
select(dp_flights,dep_time,dep_hour,dep_min)
dp_str=elect(flights, contains("dep"))
dp_str=select(flights, contains("dep"))
dep_str=select(flights, contains("dep"))
dep_str
flights %>%
group_by(carrier)
flights %>%
group_by(carrier) %>% summarise( count = n(), dist = mean(distance, na.rm = TRUE), delay = mean(arr_delay, na.rm = TRUE)
)
flights %>%
group_by(carrier) %>% summarise( count = n(), mean_delay = mean(arr_delay, na.rm = TRUE)
,median_delay = median(arr_delay, na.rm = TRUE),
IQR_delay = IQR(arr_delay, na.rm = TRUE))
diamonds
library(tidyverse)
library(dplyr)
library(nycflights13)
flights
#f<-mutate(flights,cancel=is.na(select(flights,dep_time)))
f<-mutate(flights,cancel=is.na(dep_time))
#true=canceled flights
#false=Non-canceled flights
f
pl<-select(f,dep_time,cancel)
pl
library(ggplot2)
ggplot(pl,aes(x=cancel)) +ggtitle("Canceled flights vs Non-canceled flights") +
xlab("catergorized flights") +
geom_bar(fill="blue")+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
?diamonds
diamonds
flights %>%
group_by(carrier) %>% summarise( count = n())
library(tidyverse)
library("nycflights13")
library("dplyr")
flights
filter(flights, arr_delay >= 120)
select(flights,dest)
filter(flights, dest == "IAH" | dest == "HOU")
filter(flights, arr_delay > 120, dep_delay <= 0)
filter(flights, dep_delay >= 60, dep_delay - arr_delay > 30)
filter(flights, between(arr_delay, 120, Inf) )
filter(flights, between(arr_delay, 120, Inf)& between(dep_delay,-Inf,0) )
filter(flights, between(dep_delay, 60, Inf)& between(dep_delay- arr_delay,31,Inf) )
arrange(flights, air_time)
arrange(flights, desc(distance / air_time))
dep_str=select(flights, contains("dep"))
dep_str
dp_flights<-mutate(flights,dep_hour=dep_time %/% 100, dep_min = dep_time %% 100)
select(dp_flights,dep_time,dep_hour,dep_min)
flights %>%
group_by(carrier) %>% summarise( count = n(), mean_delay = mean(arr_delay, na.rm = TRUE)
,median_delay = median(arr_delay, na.rm = TRUE),
IQR_delay = IQR(arr_delay, na.rm = TRUE))
flights %>%
group_by(carrier) %>% summarise( count = n())
flights %>%
group_by(month) %>% summarise( count = n())
mn<-flights %>%
group_by(month) %>% summarise( count = n())
ggplot(mn, aes(x = factor(month), y = count)) +
geom_boxplot()
ggplot(mn, aes(x = month, y = count)) +
geom_boxplot()
ggplot(mn, aes(x = factor(month),fill = count)) +
geom_boxplot()
count(flights,month)
#ex-3:
library(nycflights13)
mc=count(flights,month)
mc
ggplot(data = flights) + geom_bar(mapping = aes(x = month))
ggplot(data = flights) + geom_bar(mapping = aes(x = factor(month)))
ggplot(data = flights) + geom_bar(mapping = aes(x = factor(month)))+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
library(nycflights13)
library(ggplot2)
mc=count(flights,month)
mc
ggplot(data = flights) + geom_bar(mapping = aes(x = factor(month)))+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month))) + geom_bar()+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month))) + geom_bar(fill="count")+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month))) + geom_bar()+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month))) + geom_bar(fill="red")+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month))) + geom_bar(fill="red")+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month))) + geom_bar(fill=month)+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month),fill=month)) + geom_bar()+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month),fill=factor(month))) + geom_bar()+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
+ geom_bar(stat="identity")+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
+geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
+geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(pl,aes(x=cancel,fill=cancel)) +ggtitle("Canceled flights vs Non-canceled flights") +
xlab("catergorized flights") +
geom_bar()+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
library(nycflights13)
mc=count(flights,month)
mc
ggplot(data = flights,mapping = aes(x = factor(month),fill=factor(month)))
+geom_bar()
+geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
+geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,fill=factor(month)) +geom_bar(mapping = aes(x = factor(month)))
#+geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights) +geom_bar(mapping = aes(x = factor(month),fill=factor(month)))
+geom_bar(mapping = aes(x = factor(month),fill=factor(month)))
ggplot(data = flights)+geom_bar(mapping = aes(x = factor(month),fill=factor(month)))
+geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights)+
geom_bar(mapping = aes(x = factor(month),fill=factor(month)))+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
ggplot(data = flights,mapping = aes(x = factor(month),fill=factor(month)))+
geom_bar()+
geom_text(stat='count',aes(label=after_stat(count)), vjust=-0.5)
genome<-read_delim('genome.txt')
setwd("F:/INTERMATH/intermath 2021-2023/spain/DV/R for data Science")
setwd("F:/INTERMATH/intermath 2021-2023/spain/DV/R for data Science")
genome<-read_delim('genome.txt')
genome<-read_delim('genome.txt')
#ex´-5
setwd("F:/INTERMATH/intermath 2021-2023/spain/DV/R for data Science")
#ex´-5
setwd("F:/INTERMATH/intermath 2021-2023/spain/DV/R for data Science")
genome<-read_delim('genome.txt')
genome<-read_delim('genome.txt')
#ex´-5
library(tidyverse)
genome<-read_delim('genome.txt')
genome
genome %>%
group_by(Chr) %>%
summarise(mean_log = mean(Log.R.Ratio, na.rm = TRUE)
,mean_B.Allele = mean( B.Allele.Freq, na.rm = TRUE))
genome %>%
filter(!is.na(Chr)) %>%
ggplot(aes(Position, Log.R.Ratio)) +
facet_wrap(~Chr, ncol = 3) +
geom_point(color="blue")
ggplot(data = genome, mapping = aes(x = factor(Position),y=Log.R.Ratio)) +
geom_point(color="blue") +
facet_wrap(~ Chr, scales= "free")
knitr::opts_chunk$set(echo = TRUE)
library(dplyr)
house<- read.csv("F:/INTERMATH/intermath 2021-2023/spain/DV/Resampling/Ex-4/rent bootsrap for india/archive (1)/House_Dataset.csv")
class(house)
houset<- as_tibble(house)
library(corrplot)
corrplot(houset)
corrplot(houset[,c(2,3,4,5,6,9)])
library(ggcorrplot)
library(dplyr)
house<- read.csv("F:/INTERMATH/intermath 2021-2023/spain/DV/Resampling/Ex-4/rent bootsrap for india/archive (1)/House_Dataset.csv")
class(house)
houset<- as_tibble(house)
ggplot(data = houset, mapping = aes(x = Rent)) +
geom_freqpoly(mapping = aes(color = Furnishing_Status), binwidth = 5000)+
ggtitle("Freqpoly Plot of Rent vs Furnishing_Status")
libraray(tydiverse)
library(tydiverse)
library(tidyverse)
library(dplyr)
house<- read.csv("F:/INTERMATH/intermath 2021-2023/spain/DV/Resampling/Ex-4/rent bootsrap for india/archive (1)/House_Dataset.csv")
class(house)
houset<- as_tibble(house)
ggplot(data = houset, mapping = aes(x = Rent)) +
geom_freqpoly(mapping = aes(color = Furnishing_Status), binwidth = 5000)+
ggtitle("Freqpoly Plot of Rent vs Furnishing_Status")
ggplot(data = houset, mapping = aes(x = Rent)) +
geom_freqpoly(mapping = aes(color = Furnishing_Status), binwidth = 5000)+
ggtitle("Freqpoly Plot of Rent vs Furnishing_Status")
ggplot(data = houset, mapping = aes(x = Rent)) +
geom_freqpoly(mapping = aes(color = Furnishing_Status), binwidth = 50000)+
ggtitle("Freqpoly Plot of Rent vs Furnishing_Status")
ggplot(data = houset, mapping = aes(x = Rent)) +
geom_histogram(mapping = aes(color = Furnishing_Status), binwidth = 50)+
ggtitle("Freqpoly Plot of Rent vs Furnishing_Status")
library(tidyverse)
view(house)
house %>%
ggplot(aes(x = Furnishing_Status, y = Rent)) +
geom_bar(stat = "identity") +
labs(y = "Mean Price of Diamonds",
x = "Clarity Category")
house %>%
ggplot(aes(x = BHK, y = Rent,color= Furnishing_Status)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "Clarity Category")
house %>% group_by((BHK,Furnishing_Status))  %>%
house %>% group_by(BHK,Furnishing_Status)  %>%
ggplot(aes(x = BHK, y = Rent,group = Furnishing_Status,fill= Furnishing_Status)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "BHK")
house %>% group_by(BHK,Furnishing_Status)  %>%
ggplot(aes(x = factor(BHK), y = Rent,group = Furnishing_Status,fill= Furnishing_Status)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "BHK")
house %>% group_by(BHK,Furnishing_Status)  %>%
ggplot(aes(x = factor(BHK), y = factor(Rent),group = Furnishing_Status,fill= Furnishing_Status)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "BHK")
house %>% group_by(BHK,Furnishing_Status)  %>%
ggplot(aes(x = factor(BHK), y = Rent,group = Furnishing_Status,fill= Furnishing_Status)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "BHK")
house %>%
ggplot(aes(x = factor(BHK), y = Rent,group = Furnishing_Status,fill= Furnishing_Status)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "BHK")
house %>%
ggplot(aes(x = factor(BHK), y = Rent,fill= Furnishing_Status)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "BHK")
house %>%
ggplot(aes(x = factor(BHK), y = Rent)) +
geom_bar(stat = "identity") +
labs(y = "Rent",
x = "BHK")
house %>%
group_by(BHK, Furnishing_Status) %>%
ggplot(aes(x = factor(BHK), y = Rent, group =Furnishing_Status , fill = Furnishing_Status)) +
geom_boxplot()
house %>%
group_by(BHK, Furnishing_Status) %>%
ggplot(aes(x = factor(BHK), y = Rent, group =Furnishing_Status , fill = Furnishing_Status)) +
geom_boxplot(stat="identity")
house %>%
group_by(BHK, Furnishing_Status) %>%  summarize(m = mean(Rent)) %>%
ggplot(aes(x = factor(BHK), y = Rent, group =Furnishing_Status , fill = Furnishing_Status)) +
geom_bar(stat="identity")
house %>%
group_by(BHK, Furnishing_Status) %>% summarize(m = mean(Rent)) %>%
ggplot(aes(x = factor(BHK), y = m, group =Furnishing_Status , fill = Furnishing_Status)) +
geom_bar(stat="identity")
house %>%
group_by(BHK, Furnishing_Status) %>%
summarize(m = mean(Rent)) %>%
ggplot(aes(x = factor(BHK), y = m, group =Furnishing_Status , fill = Furnishing_Status)) +
geom_bar(stat="identity")
house %>%
group_by(BHK, Furnishing_Status) %>%
summarize(m = mean(Rent)) %>%
ggplot(aes(x = factor(BHK), y = m, group =Furnishing_Status , fill = Furnishing_Status)) +
geom_bar(stat="identity")
house %>%
summarize(m = mean(Rent)) %>%
ggplot(aes(x = factor(BHK), y = m, group =Furnishing_Status , fill = Furnishing_Status)) +
geom_bar(stat="identity")
house %>%
ggplot(aes(x = BHK, y = Rent, group = Furnishing_Status, color= Furnishing_Status)) +
geom_point()
house %>%
group_by(BHK) %>%
summarize(m = mean(Rent)) %>% # m is defined as the mean price of diamonds grouped by clarity categories
ungroup()
house %>%
group_by(BHK) %>%
summarize(mean_price = mean(Rent)) %>% # m is defined as the mean price of diamonds grouped by clarity categories
ungroup()
house %>%
group_by(BHK) %>%
summarize(mean_rent = mean(Rent)) %>% # m is defined as the mean price of diamonds grouped by clarity categories
ungroup()
house %>%
group_by(BHK) %>%
summarize(mean_rent = mean(Rent)) %>% # m is defined as the mean price of diamonds grouped by clarity categories
ungroup() ) %>% ggplot(aes(x = factor(BHK), y =mean_rent )) + # setting up x and y values for graphing
house %>%
group_by(BHK) %>%
summarize(mean_rent = mean(Rent)) %>% # m is defined as the mean price of diamonds grouped by clarity categories
ungroup()  %>% ggplot(aes(x = factor(BHK), y =mean_rent )) + # setting up x and y values for graphing
geom_bar()
house %>%
group_by(BHK) %>%
summarize(mean_rent = mean(Rent)) %>% # m is defined as the mean price of diamonds grouped by clarity categories
ggplot(aes(x = factor(BHK), y =mean_rent )) + # setting up x and y values for graphing
geom_bar()
house %>%
group_by(BHK) %>%
summarize(mean_rent = mean(Rent)) %>% # m is defined as the mean price of diamonds grouped by clarity categories
ggplot(aes(x = factor(BHK), y =mean_rent )) + # setting up x and y values for graphing
geom_bar(stat = "identity")
meanrent_by_rooms<- house %>%
group_by(BHK) %>%
summarize(mean_rent = mean(Rent))
meanrent_by_rooms
meanrent_by_rooms
meanrent_by_rooms%>% # m is defined as the mean price of diamonds grouped by clarity categories
ggplot(aes(x = factor(BHK), y =mean_rent )) + # setting up x and y values for graphing
geom_bar(stat = "identity")
meanrent_by_rooms%>% # m is defined as the mean price of diamonds grouped by clarity categories
ggplot(aes(x = factor(BHK), y =format(mean_rent ,scientific=FALSE))) + # setting up x and y values for graphing
geom_bar(stat = "identity")
meanrent_by_rooms%>% # m is defined as the mean price of diamonds grouped by clarity categories
ggplot(aes(x = factor(BHK), y =format(mean_rent ,scientific=FALSE),color= Furnishing_Status)) + # setting up x and y values for graphing
geom_bar(stat = "identity")
meanrent_by_rooms%>%
ggplot(aes(x = factor(BHK), y =format(mean_rent ,scientific=FALSE))) +
labs(x="number of Rooms",y="rent")+
geom_bar(stat = "identity")
meanrent_by_rooms<- house %>%
group_by(BHK,Furnishing_Status) %>%
summarize(mean_rent = mean(Rent))
meanrent_by_rooms
# mean_rent is defined as the mean rent of houses grouped by BHK categories
meanrent_by_rooms<- house %>%
groups_by(BHK,Furnishing_Status) %>%
summarize(mean_rent = mean(Rent))
meanrent_by_rooms
library(tidyverse)
house<- read.csv("F:/INTERMATH/intermath 2021-2023/spain/DV/Resampling/Ex-4/rent bootsrap for india/archive (1)/House_Dataset.csv")
view(house) #to see the dataset
#Find the relation of Rent with Number of Bedrooms and Hall/Kitchen areas(BHK)
# mean_rent is defined as the mean rent of houses grouped by BHK categories
meanrent_by_rooms<- house %>%
group_by(BHK) %>%
summarize(mean_rent = mean(Rent))
meanrent_by_rooms
meanrent_by_rooms%>%
ggplot(aes(x = factor(BHK), y =format(mean_rent ,scientific=FALSE))) +
labs(x="number of Rooms",y="mean_rent")+
geom_bar(stat = "identity")
meanrent_by_rooms%>%
ggplot(aes(x = factor(BHK), y =format(mean_rent ,scientific=FALSE))) +
labs(x="number of Rooms",y="mean_rent","Mean_Rent Vs BHK")+
geom_bar(stat = "identity")
meanrent_by_rooms%>%
ggplot(aes(x = factor(BHK), y =format(mean_rent ,scientific=FALSE))) +
labs(title= "Mean_Rent Vs BHK",x="number of Rooms",y="mean_rent")+
geom_bar(stat = "identity")
meanrent_by_rooms
house<- read.csv("F:/INTERMATH/intermath 2021-2023/spain/DV/Resampling/Ex-4/rent bootsrap for india/archive (1)/House_Dataset.csv")
meanrent_by_type<- house %>%
group_by(Area_Type) %>%
summarize(mean_rent = mean(Rent))
meanrent_by_type
meanrent_by_type<- house %>%
group_by(Area_Type) %>%
summarize(mean_rent = mean(Rent))%>%
ggplot(aes(x = Area_Type, y =format(mean_rent ,scientific=FALSE))) +
labs(title= "Mean_Rent Vs Area_Type",x="Area Type",y="mean_rent")+
geom_bar(stat = "identity")
house %>%
group_by(Area_Type) %>%
summarize(mean_rent = mean(Rent))%>%
ggplot(aes(x = Area_Type, y =format(mean_rent ,scientific=FALSE))) +
labs(title= "Mean_Rent Vs Area_Type",x="Area Type",y="mean_rent")+
geom_bar(stat = "identity")
house %>%
group_by(Furnishing_Status) %>%
summarize(mean_rent = mean(Rent))%>%
ggplot(aes(x = Furnishing_Status, y =format(mean_rent ,scientific=FALSE))) +
labs(title= "Mean_Rent Vs Furnishing_Status",x="Furnishing_Status",y="mean_rent")+
geom_bar(stat = "identity")
house %>%
group_by(Area_Type) %>%
summarize(mean_rent = mean(Rent))%>%
ggplot(aes(x = Area_Type, y =format(mean_rent ,scientific=FALSE))) +
labs(title= "Mean_Rent Vs Area_Type",x="Area Type",y="mean_rent")+
geom_bar(stat = "identity")
house %>%
group_by(Furnishing_Status) %>%
summarize(mean_rent = mean(Rent))%>%
ggplot(aes(x = Furnishing_Status, y =format(mean_rent ,scientific=FALSE))) +
labs(title= "Mean_Rent Vs Furnishing_Status",x="Furnishing_Status",y="mean_rent")+
geom_bar(stat = "identity")
ggplot(filter(house, Rent), aes(x = Rent)) +
geom_histogram(binwidth = 10)
ggplot(filter(house, Rent<800000), aes(x =format(Rent ,scientific=FALSE) )) +
geom_histogram(binwidth = 10)
ggplot(filter(house, Rent<500000), aes(x =format(Rent ,scientific=FALSE) )) +
geom_histogram(binwidth = 10)
ggplot(filter(house, Rent<500000), aes(x =Rent)) +
geom_histogram(binwidth = 10)
ggplot(filter(house, Rent<500000), aes(x =Rent)) +
geom_histogram(binwidth = 100)
ggplot(filter(house, Rent<500000), aes(x =Rent)) +
geom_histogram(binwidth = 1000)
ggplot(filter(house, Rent<500000), aes(x =Rent)) +
geom_histogram(binwidth = 10000)
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status))
house<- read.csv("F:/INTERMATH/intermath 2021-2023/spain/DV/Resampling/Ex-4/rent bootsrap for india/archive (1)/House_Dataset.csv")
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status,fill=Area_Locality))
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status,fill=City))
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status,fill=City))
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status,fill=City,stat= "count"))
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status,fill=City))+
geom_text(aes(stat= "count"))
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status,fill=City))+
labs(tilte="Furnishing state vs City")
house %>%
ggplot() +
geom_bar(mapping = aes(x = Furnishing_Status,fill=City))+
labs(title="Furnishing state vs City")
houses %>%
count(Area_Type, Furnishing_Status) %>%
group_by(Area_Type) %>%
mutate(prop = n / sum(n)) %>%
ggplot(mapping = aes(x = Area_Type, y =Furnishing_Status )) +
geom_tile(mapping = aes(fill = prop))
house %>%
count(Area_Type, Furnishing_Status) %>%
group_by(Area_Type) %>%
mutate(prop = n / sum(n)) %>%
ggplot(mapping = aes(x = Area_Type, y =Furnishing_Status )) +
geom_tile(mapping = aes(fill = prop))
house %>%
count(Area_Type, Furnishing_Status) %>%
group_by(Area_Type) %>%
mutate(prop = (n / sum(n))*100) %>%
ggplot(mapping = aes(x = Area_Type, y =Furnishing_Status )) +
geom_tile(mapping = aes(fill = prop))
ggplot(house, aes(x = factor(BHK), y = Rent)) +
geom_hex() +
facet_wrap(~City, ncol = 1)
